generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" 
  url      = env("DATABASE_URL")
}

model LedgerItem {
  id         Int      @id @default(autoincrement())
  ledgerId   Int
  quantity   Int
  price      Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  productId  Int

  ledger   Ledger   @relation(fields: [ledgerId], references: [id])
  product  Product  @relation(fields: [productId], references: [id])
}

model Ledger {
  id          Int           @id @default(autoincrement())
  customerId  Int
  totalAmount Float          @default(0)
  businessId  Int
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  customer    Customer       @relation(fields: [customerId], references: [id])
  business    Business       @relation(fields: [businessId], references: [id])
  ledgerItems LedgerItem[]

}

model Customer {
  id         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  phone      String
  address    String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  businessId Int

  business Business @relation(fields: [businessId], references: [id])
  ledgers  Ledger[]
}


model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  products    Product[]
}

model Product {
  id              Int       @id @default(autoincrement())
  businessId      Int       
  categoryId      Int?      
  itemName        String     
  description     String?
  p_price         Float?
  s_price         Float?
  mrp             Float?     @default(0)
  hsn             String?    
  gst_rate        GstRate   @default(ZERO)
  barcode         String?     
  unit            Unit       @default(PIECE)
  alert_quantity  Float?     @default(0)
  opening_stock   Float      @default(0)
  op_stock_date   DateTime  
  img_url         String?    
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  business        Business   @relation(fields: [businessId], references: [id])
  category        Category?  @relation(fields: [categoryId], references: [id])
  ledgerItems     LedgerItem[]
}


model Business {
  id        Int        @id @default(autoincrement())
  name      String
  address   String
  email     String     @unique
  phone     String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  customers Customer[]
  products  Product[]
  ledgers   Ledger[]
}

enum GstRate {
  ZERO             
  ZERO_POINT_ONE   
  ZERO_POINT_TWO_FIVE 
  ONE_POINT_FIVE   
  THREE            
  FIVE            
  SIX             
  TWELVE           
  THIRTEEN_POINT_EIGHT 
  FOURTEEN        
  EIGHTEEN         
  TWENTY_EIGHT    
  TAX_EXEMPTED     
}

enum Unit {
  PIECE
  BOX
  PACKET
  PETI
  BOTTLE
  PACK
  SET
  GRAM
  KG
  BORA
  ML
  LITRE
  MILLIMETER
  CM
  M
  KM
  INCH
  FEET
  SQ_INCH
  SQ_FEET
  SQ_MT
  DOZEN
  BUNDLE
  POUCH
  CARAT
  POUND
  PAIR
  QUNITAL
  TON
  RATTI
  TROLLEY_TRUCK
}